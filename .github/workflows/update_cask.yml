name: Update Homebrew Cask

on:
  schedule:
    - cron: '0 3 * * *'  # 毎日午前3時 (UTC) に実行 (日本時間12:00)
  workflow_dispatch:  # 手動実行も可能
  repository_dispatch:  # アプリ側からトリガー可能

jobs:
  update-cask:
    runs-on: ubuntu-latest

    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 最新のリリースタグを取得
        id: get_latest_version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/CSReviser/CaptureStream2/releases/latest | jq -r '.tag_name')
          echo "最新バージョン: $LATEST_VERSION"
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: ruby file update
        run: |
          FILE_PATH="Casks/capturestream2.rb"

          # 既存のバージョンを取得
          OLD_VERSION=$(grep 'version "' "$FILE_PATH" | awk -F '"' '{print $2}')
          echo "現在のバージョン: $OLD_VERSION"
          # 環境変数としてエクスポート（次のステップでも利用可能にする）
          echo "OLD_VERSION=$OLD_VERSION" >> $GITHUB_ENV
          
          # 新しいバージョンと一致していればスキップ
          if [[ "$OLD_VERSION" == "$LATEST_VERSION" ]]; then
            echo "バージョンに変更がないため、更新をスキップします。"
            exit 0
          fi

          # capturestream2.rb を更新
          sed -i "s/version \"$OLD_VERSION\"/version \"$LATEST_VERSION\"/g" "$FILE_PATH"
          sed -i "s|/download/$OLD_VERSION/|/download/$LATEST_VERSION/|g" "$FILE_PATH"
          sed -i "s|CaptureStream2-MacOS-$OLD_VERSION.dmg|CaptureStream2-MacOS-$LATEST_VERSION.dmg|g" "$FILE_PATH"

      - name: 過去バージョンの Cask を保存
        run: |
          # OLD_VERSION は GITHUB_ENV から取得できる
          echo "使用する旧バージョン: ${OLD_VERSION}"
          OLD_CASK_PATH="Casks/capturestream2@${OLD_VERSION}.rb"

          # 過去バージョンの Cask が存在しない場合のみ作成
          if [[ ! -f "$OLD_CASK_PATH" ]]; then
            echo "過去バージョンの Cask を作成: $OLD_CASK_PATH"
            cp "Casks/capturestream2.rb" "$OLD_CASK_PATH"

            # cask 名とバージョンを修正
            sed -i "s/cask \"capturestream2\"/cask \"capturestream2@${OLD_VERSION}\"/g" "$OLD_CASK_PATH"
            sed -i "s/version \"$LATEST_VERSION\"/version \"$OLD_VERSION\"/g" "$OLD_CASK_PATH"
            sed -i "s|CaptureStream2-MacOS-$LATEST_VERSION.dmg|CaptureStream2-MacOS-$OLD_VERSION.dmg|g" "$OLD_CASK_PATH"
          else
            echo "過去バージョンの Cask は既に存在するため、スキップ: $OLD_CASK_PATH"
          fi

      - name: 変更を GitHub にコミット & プッシュ
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          git add Casks/capturestream2.rb Casks/capturestream2@*.rb
          git diff --cached --exit-code && echo "No changes to commit." && exit 0
          git commit -m "Update CaptureStream2.rb to version $LATEST_VERSION and archive $OLD_VERSION"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main